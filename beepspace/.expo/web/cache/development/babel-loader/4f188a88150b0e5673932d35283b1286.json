{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _AnimatedInterpolation = _interopRequireDefault(require(\"./AnimatedInterpolation\"));\n\nvar _AnimatedWithChildren2 = _interopRequireDefault(require(\"./AnimatedWithChildren\"));\n\nvar _InteractionManager = _interopRequireDefault(require(\"../../../../exports/InteractionManager\"));\n\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar NativeAnimatedAPI = _NativeAnimatedHelper.default.API;\n\nfunction _flush(rootNode) {\n  var animatedStyles = new Set();\n\n  function findAnimatedStyles(node) {\n    if (typeof node.update === 'function') {\n      animatedStyles.add(node);\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n\n  findAnimatedStyles(rootNode);\n  animatedStyles.forEach(function (animatedStyle) {\n    return animatedStyle.update();\n  });\n}\n\nvar AnimatedValue = function (_AnimatedWithChildren) {\n  _inheritsLoose(AnimatedValue, _AnimatedWithChildren);\n\n  function AnimatedValue(value) {\n    var _this;\n\n    _this = _AnimatedWithChildren.call(this) || this;\n\n    if (typeof value !== 'number') {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    _this._startingValue = _this._value = value;\n    _this._offset = 0;\n    _this._animation = null;\n    return _this;\n  }\n\n  var _proto = AnimatedValue.prototype;\n\n  _proto.__detach = function __detach() {\n    var _this2 = this;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.getValue(this.__getNativeTag(), function (value) {\n        _this2._value = value;\n      });\n    }\n\n    this.stopAnimation();\n\n    _AnimatedWithChildren.prototype.__detach.call(this);\n  };\n\n  _proto.__getValue = function __getValue() {\n    return this._value + this._offset;\n  };\n\n  _proto.setValue = function setValue(value) {\n    if (this._animation) {\n      this._animation.stop();\n\n      this._animation = null;\n    }\n\n    this._updateValue(value, !this.__isNative);\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);\n    }\n  };\n\n  _proto.setOffset = function setOffset(offset) {\n    this._offset = offset;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n    }\n  };\n\n  _proto.flattenOffset = function flattenOffset() {\n    this._value += this._offset;\n    this._offset = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n    }\n  };\n\n  _proto.extractOffset = function extractOffset() {\n    this._offset += this._value;\n    this._value = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n    }\n  };\n\n  _proto.stopAnimation = function stopAnimation(callback) {\n    this.stopTracking();\n    this._animation && this._animation.stop();\n    this._animation = null;\n    callback && callback(this.__getValue());\n  };\n\n  _proto.resetAnimation = function resetAnimation(callback) {\n    this.stopAnimation(callback);\n    this._value = this._startingValue;\n  };\n\n  _proto._onAnimatedValueUpdateReceived = function _onAnimatedValueUpdateReceived(value) {\n    this._updateValue(value, false);\n  };\n\n  _proto.interpolate = function interpolate(config) {\n    return new _AnimatedInterpolation.default(this, config);\n  };\n\n  _proto.animate = function animate(animation, callback) {\n    var _this3 = this;\n\n    var handle = null;\n\n    if (animation.__isInteraction) {\n      handle = _InteractionManager.default.createInteractionHandle();\n    }\n\n    var previousAnimation = this._animation;\n    this._animation && this._animation.stop();\n    this._animation = animation;\n    animation.start(this._value, function (value) {\n      _this3._updateValue(value, true);\n    }, function (result) {\n      _this3._animation = null;\n\n      if (handle !== null) {\n        _InteractionManager.default.clearInteractionHandle(handle);\n      }\n\n      callback && callback(result);\n    }, previousAnimation, this);\n  };\n\n  _proto.stopTracking = function stopTracking() {\n    this._tracking && this._tracking.__detach();\n    this._tracking = null;\n  };\n\n  _proto.track = function track(tracking) {\n    this.stopTracking();\n    this._tracking = tracking;\n  };\n\n  _proto._updateValue = function _updateValue(value, flush) {\n    if (value === undefined) {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    this._value = value;\n\n    if (flush) {\n      _flush(this);\n    }\n\n    _AnimatedWithChildren.prototype.__callListeners.call(this, this.__getValue());\n  };\n\n  _proto.__getNativeConfig = function __getNativeConfig() {\n    return {\n      type: 'value',\n      value: this._value,\n      offset: this._offset\n    };\n  };\n\n  return AnimatedValue;\n}(_AnimatedWithChildren2.default);\n\nvar _default = AnimatedValue;\nexports.default = _default;","map":{"version":3,"sources":["D:/xampp/htdocs/githubProjects/BeepSpace/beepspace/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedValue.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","NativeAnimatedAPI","NativeAnimatedHelper","API","_flush","rootNode","animatedStyles","Set","findAnimatedStyles","node","update","add","__getChildren","forEach","animatedStyle","AnimatedValue","_AnimatedWithChildren","value","_this","call","Error","_startingValue","_value","_offset","_animation","_proto","__detach","_this2","__isNative","getValue","__getNativeTag","stopAnimation","__getValue","setValue","stop","_updateValue","setAnimatedNodeValue","setOffset","offset","setAnimatedNodeOffset","flattenOffset","flattenAnimatedNodeOffset","extractOffset","extractAnimatedNodeOffset","callback","stopTracking","resetAnimation","_onAnimatedValueUpdateReceived","interpolate","config","AnimatedInterpolation","animate","animation","_this3","handle","__isInteraction","InteractionManager","createInteractionHandle","previousAnimation","start","result","clearInteractionHandle","_tracking","track","tracking","flush","undefined","__callListeners","__getNativeConfig","type","AnimatedWithChildren"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport InteractionManager from '../../../../exports/InteractionManager';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\n/**\n * Animated works by building a directed acyclic graph of dependencies\n * transparently when you render your Animated components.\n *\n *               new Animated.Value(0)\n *     .interpolate()        .interpolate()    new Animated.Value(1)\n *         opacity               translateY      scale\n *          style                         transform\n *         View#234                         style\n *                                         View#123\n *\n * A) Top Down phase\n * When an Animated.Value is updated, we recursively go down through this\n * graph in order to find leaf nodes: the views that we flag as needing\n * an update.\n *\n * B) Bottom Up phase\n * When a view is flagged as needing an update, we recursively go back up\n * in order to build the new value that it needs. The reason why we need\n * this two-phases process is to deal with composite props such as\n * transform which can receive values from multiple parents.\n */\n\nfunction _flush(rootNode) {\n  var animatedStyles = new Set();\n\n  function findAnimatedStyles(node) {\n    /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.68 was deployed. To see the error delete this\n     * comment and run Flow. */\n    if (typeof node.update === 'function') {\n      animatedStyles.add(node);\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n\n  findAnimatedStyles(rootNode);\n  /* $FlowFixMe */\n\n  animatedStyles.forEach(function (animatedStyle) {\n    return animatedStyle.update();\n  });\n}\n/**\n * Standard value for driving animations.  One `Animated.Value` can drive\n * multiple properties in a synchronized fashion, but can only be driven by one\n * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,\n * or calling `setValue`) will stop any previous ones.\n *\n * See https://reactnative.dev/docs/animatedvalue.html\n */\n\n\nvar AnimatedValue = /*#__PURE__*/function (_AnimatedWithChildren) {\n  _inheritsLoose(AnimatedValue, _AnimatedWithChildren);\n\n  function AnimatedValue(value) {\n    var _this;\n\n    _this = _AnimatedWithChildren.call(this) || this;\n\n    if (typeof value !== 'number') {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    _this._startingValue = _this._value = value;\n    _this._offset = 0;\n    _this._animation = null;\n    return _this;\n  }\n\n  var _proto = AnimatedValue.prototype;\n\n  _proto.__detach = function __detach() {\n    var _this2 = this;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.getValue(this.__getNativeTag(), function (value) {\n        _this2._value = value;\n      });\n    }\n\n    this.stopAnimation();\n\n    _AnimatedWithChildren.prototype.__detach.call(this);\n  };\n\n  _proto.__getValue = function __getValue() {\n    return this._value + this._offset;\n  }\n  /**\n   * Directly set the value.  This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#setvalue\n   */\n  ;\n\n  _proto.setValue = function setValue(value) {\n    if (this._animation) {\n      this._animation.stop();\n\n      this._animation = null;\n    }\n\n    this._updateValue(value, !this.__isNative\n    /* don't perform a flush for natively driven values */\n    );\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);\n    }\n  }\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether via\n   * `setValue`, an animation, or `Animated.event`.  Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#setoffset\n   */\n  ;\n\n  _proto.setOffset = function setOffset(offset) {\n    this._offset = offset;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n    }\n  }\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#flattenoffset\n   */\n  ;\n\n  _proto.flattenOffset = function flattenOffset() {\n    this._value += this._offset;\n    this._offset = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n  /**\n   * Sets the offset value to the base value, and resets the base value to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#extractoffset\n   */\n  ;\n\n  _proto.extractOffset = function extractOffset() {\n    this._offset += this._value;\n    this._value = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#stopanimation\n   */\n  ;\n\n  _proto.stopAnimation = function stopAnimation(callback) {\n    this.stopTracking();\n    this._animation && this._animation.stop();\n    this._animation = null;\n    callback && callback(this.__getValue());\n  }\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#resetanimation\n   */\n  ;\n\n  _proto.resetAnimation = function resetAnimation(callback) {\n    this.stopAnimation(callback);\n    this._value = this._startingValue;\n  };\n\n  _proto._onAnimatedValueUpdateReceived = function _onAnimatedValueUpdateReceived(value) {\n    this._updateValue(value, false\n    /*flush*/\n    );\n  }\n  /**\n   * Interpolates the value before updating the property, e.g. mapping 0-1 to\n   * 0-10.\n   */\n  ;\n\n  _proto.interpolate = function interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  }\n  /**\n   * Typically only used internally, but could be used by a custom Animation\n   * class.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#animate\n   */\n  ;\n\n  _proto.animate = function animate(animation, callback) {\n    var _this3 = this;\n\n    var handle = null;\n\n    if (animation.__isInteraction) {\n      handle = InteractionManager.createInteractionHandle();\n    }\n\n    var previousAnimation = this._animation;\n    this._animation && this._animation.stop();\n    this._animation = animation;\n    animation.start(this._value, function (value) {\n      // Natively driven animations will never call into that callback, therefore we can always\n      // pass flush = true to allow the updated value to propagate to native with setNativeProps\n      _this3._updateValue(value, true\n      /* flush */\n      );\n    }, function (result) {\n      _this3._animation = null;\n\n      if (handle !== null) {\n        InteractionManager.clearInteractionHandle(handle);\n      }\n\n      callback && callback(result);\n    }, previousAnimation, this);\n  }\n  /**\n   * Typically only used internally.\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    this._tracking && this._tracking.__detach();\n    this._tracking = null;\n  }\n  /**\n   * Typically only used internally.\n   */\n  ;\n\n  _proto.track = function track(tracking) {\n    this.stopTracking();\n    this._tracking = tracking;\n  };\n\n  _proto._updateValue = function _updateValue(value, flush) {\n    if (value === undefined) {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    this._value = value;\n\n    if (flush) {\n      _flush(this);\n    }\n\n    _AnimatedWithChildren.prototype.__callListeners.call(this, this.__getValue());\n  };\n\n  _proto.__getNativeConfig = function __getNativeConfig() {\n    return {\n      type: 'value',\n      value: this._value,\n      offset: this._offset\n    };\n  };\n\n  return AnimatedValue;\n}(AnimatedWithChildren);\n\nexport default AnimatedValue;"]},"metadata":{},"sourceType":"script"}